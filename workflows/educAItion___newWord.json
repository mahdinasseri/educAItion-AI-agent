{
  "name": "educAItion - newWord",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "id": "e2f0be95-2d02-4dba-a2a7-e0be9c8b33d1",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -412,
        -1860
      ],
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "text": "=#{{ $('Select New Word').item.json.word }}\n{{ $('Select New Word').item.json.definition == null ? $('Agent New Word').item.json.output.description + \"\\n\\n\" +$('Agent New Word').item.json.output.visual : $('Select New Word').item.json.definition\n}} ",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        376,
        -1855
      ],
      "id": "0a01f7da-9d2c-470d-b525-0c2eb37ba043",
      "name": "Telegram",
      "webhookId": "4c772b85-1ffc-4578-b971-474dfeaf691a",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select w.id,w.word , wd.definition,\n  0 as box\n  from words w\n  left join word_definitions wd on wd.word_id=w.id\n  where w.id not in (\n  select word_id from user_words where user_id={{ $json.user_id }}\n  )\nORDER BY RAND()\nLIMIT 1;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -880,
        -1955
      ],
      "id": "13637458-953e-44fa-80a5-532d4fc9452b",
      "name": "Select New Word",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "user_words",
          "mode": "list",
          "cachedResultName": "user_words"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "user_id",
              "value": "={{ $('When Executed by Another Workflow').item.json.user_id }}"
            },
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "box",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        596,
        -1630
      ],
      "id": "82249866-f8ce-481b-b2c0-a6e30ee71b22",
      "name": "Insert in user_words",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Teach this word: '{{ $json.word }}'",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Teach a New English Word\n\nObjective: Introduce and teach one new English word to an English learner in a clear, comprehensive, and memorable way.\n\nInstructions:\n\n#{word} : Include Definition (noun, verb, adjective, etc.). \n\n{Definition: Provide a simple, clear definition suitable for intermediate learners.}, \n\n{Pronunciation: Write the phonetic pronunciation (IPA or simplified format). Add an audio pronunciation if possible.}\n\n* List 2–3 common synonyms.\n* List 1–2 antonyms.\n\n* Give 2–3 example sentences (professional and casual if possible).\n\n**Visual or Metaphor**: * Offer a metaphor, image, or situation that helps the learner remember the word.\n\noutput format:\n{\nwird : {word}\ndefenition : {all parts except visual}\nvisual : {visual part}\n}"
        }
      },
      "id": "186a536d-edf7-4831-a23a-bbc86ae3cf93",
      "name": "Agent New Word",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -440,
        -2080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91747e92-2108-47df-b184-966c229dedca",
              "leftValue": "={{ $json.definition }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        -1955
      ],
      "id": "491be767-ecef-4faa-bc2d-48877b73983e",
      "name": "If"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "word_definitions",
          "mode": "list",
          "cachedResultName": "word_definitions"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "definition",
              "value": "={{ $json.output.description }}\n---\nVisualize to remember:\n{{ $json.output.visual }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -64,
        -2080
      ],
      "id": "6f09b91f-da5e-4c3f-b058-5dbfa6872468",
      "name": "Insert in word definitions",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "=Create an image that clearly visualizes the word mentioned in the end of prompt, in a way that makes its meaning memorable and intuitive for English language learners.\n\nAdditional Output Constraints:\n\n* Max file size: 100KB\n* Aspect ratio: 1:1 (square)\n* Style preference: real, minimal, friendly, and intuitive — suited for beginners\n* Avoid: Text in image, overly complex scenes.\n\nWORD: {{ $('Select New Word').item.json.word }}\n{{$json.output.visual === null ? 'None' : $json.output.visual\n }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -64,
        -1880
      ],
      "id": "54fced1d-7dfa-4a51-9ef3-c2fa0a6c1d29",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('Select New Word').item.json.id }}.{{ $json.fileExtension }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        156,
        -1880
      ],
      "id": "7ca67606-7b9c-46e9-b404-d1c651d5ce4c",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('Select New Word').item.json.id }}.png",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        596,
        -1830
      ],
      "id": "28676825-9377-4454-8834-651becb1ac28",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "=#{{ $('Select New Word').item.json.word }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        816,
        -1830
      ],
      "id": "c403ca58-da5b-44be-8054-6daf76e9c0a7",
      "name": "Telegram - Send Image",
      "webhookId": "fb5d73a6-b366-4e47-ba55-43407879b8c2",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "user_id",
              "type": "number"
            },
            {
              "name": "name"
            },
            {
              "name": "chatID"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1100,
        -1955
      ],
      "id": "2ef881b3-bdb7-470d-9653-76f4169db332",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"description\": \"defenition of word\",\n  \"visual\": \"a text describing visual of word\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -292,
        -1860
      ],
      "id": "03dccadd-d1fd-4062-ac22-33610d67fc48",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "=#{{ $('Select New Word').item.json.word }}\n{{ $('Select New Word').item.json.definition == null ? $('Agent New Word').item.json.output.description + \"\\n\\n\" +$('Agent New Word').item.json.output.visual : $('Select New Word').item.json.definition\n}} ",
        "voice": "fable",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        596,
        -2030
      ],
      "id": "772b9b06-e662-40cc-8fa5-dd8d4cf354f4",
      "name": "TTS1",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        816,
        -2030
      ],
      "id": "50c1bf4d-0141-483f-9d09-4de83f1f25c4",
      "name": "SendVoice1",
      "webhookId": "c6a36e31-c627-47fa-b72a-01bda169c8d3",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent New Word",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Insert in user_words",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          },
          {
            "node": "TTS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select New Word": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent New Word": {
      "main": [
        [
          {
            "node": "Insert in word definitions",
            "type": "main",
            "index": 0
          },
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Agent New Word",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Telegram - Send Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Select New Word",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Agent New Word",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "TTS1": {
      "main": [
        [
          {
            "node": "SendVoice1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Tehran",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "94914a1d-f4d8-476b-9667-4fefc19bf454",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "69d0d047188cb9156a6f7134cb2977dd1da142c7fa73b37c2ba1fed7d3c72efb"
  },
  "id": "XYlFwqrYJB4j01dU",
  "tags": [
    {
      "createdAt": "2025-06-12T09:17:49.522Z",
      "updatedAt": "2025-06-12T09:17:49.522Z",
      "id": "ctP1QRHmNTJd1ue4",
      "name": "educAItion"
    }
  ]
}